[{"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/index.js":"1","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/App.js":"2","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/serviceWorkerRegistration.js":"3","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/reportWebVitals.js":"4","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Layout.js":"5","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Home.js":"6","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/NotFound.js":"7","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Login.js":"8","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Landing.js":"9","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantsSection.js":"10","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Header.js":"11","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantAddModal.js":"12","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantCard.js":"13","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Button.js":"14"},{"size":896,"mtime":1623935692000,"results":"15","hashOfConfig":"16"},{"size":678,"mtime":1623431314000,"results":"17","hashOfConfig":"16"},{"size":5064,"mtime":1623375504000,"results":"18","hashOfConfig":"16"},{"size":364,"mtime":1623375504000,"results":"19","hashOfConfig":"16"},{"size":363,"mtime":1623381817000,"results":"20","hashOfConfig":"16"},{"size":319,"mtime":1623714351000,"results":"21","hashOfConfig":"16"},{"size":314,"mtime":1623381078000,"results":"22","hashOfConfig":"16"},{"size":2849,"mtime":1623418960000,"results":"23","hashOfConfig":"16"},{"size":804,"mtime":1623789768000,"results":"24","hashOfConfig":"16"},{"size":5096,"mtime":1623889805000,"results":"25","hashOfConfig":"16"},{"size":981,"mtime":1623792898000,"results":"26","hashOfConfig":"16"},{"size":6058,"mtime":1623898113000,"results":"27","hashOfConfig":"16"},{"size":11353,"mtime":1623947215000,"results":"28","hashOfConfig":"16"},{"size":413,"mtime":1623418012000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"agl8zp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/index.js",[],["66","67"],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/App.js",["68"],"import React from 'react';\nimport { Route } from 'react-router';\n\nimport Layout from './components/Layout';\n\nimport Home from './pages/Home';\nimport Landing from './pages/Landing';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\n\nclass App extends React.Component {\n  static displayName = App.name;\n\n  constructor(){\n    super();\n  }\n  \n  render (){\n    return (\n      <Layout>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/home' component={Home} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/error' component={NotFound} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/serviceWorkerRegistration.js",[],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/reportWebVitals.js",[],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Layout.js",[],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Home.js",["69"],"import React from 'react';\nimport PlantsSection from '../components/PlantsSection';\n\nclass Home extends React.Component {\n\n  constructor(){\n    super();\n  }\n  \n  render (){\n    return (\n        <div className='text-center max-w-4xl mx-auto'>\n          <PlantsSection />\n        </div>\n    );\n  }\n}\n\nexport default Home;","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/NotFound.js",["70"],"import React from 'react';\n\nclass NotFound extends React.Component {\n\n  constructor(){\n    super();\n  }\n  \n  render (){\n    return (\n        <div className=\"text-center\">\n            <div className=\"p-96 text-4xl font-mono\">Error - Could not find page...</div>\n        </div>\n    );\n  }\n}\n\nexport default NotFound;","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Login.js",["71"],"import React from 'react';\n\nclass Login extends React.Component {\n\n  constructor(){\n    super();\n  }\n  \n  render (){\n    return (\n        <div class=\"flex items-center mt-20 bg-white dark:bg-gray-900\">\n            <div class=\"container mx-auto\">\n                <div class=\"max-w-md mx-auto my-10\">\n                    <div class=\"text-center\">\n                        <h1 class=\"my-3 text-3xl font-semibold text-gray-700 dark:text-gray-200\">Log in</h1>\n                        <p class=\"text-gray-500 dark:text-gray-400\">Sign in to access your account</p>\n                    </div>\n                    <div class=\"m-7\">\n                        <form action=\"\">\n                            <div class=\"mb-6\">\n                                <label for=\"email\" class=\"block mb-2 text-sm text-gray-600 dark:text-gray-400\">Email Address</label>\n                                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"you@company.com\" class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\" />\n                            </div>\n                            <div class=\"mb-6\">\n                                <div class=\"flex justify-between mb-2\">\n                                    <label for=\"password\" class=\"text-sm text-gray-600 dark:text-gray-400\">Password</label>\n                                    <a href=\"#!\" class=\"text-sm text-gray-400 focus:outline-none focus:text-indigo-500 hover:text-indigo-500 dark:hover:text-indigo-300\">Forgot password?</a>\n                                </div>\n                                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Your Password\" class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300 dark:bg-gray-700 dark:text-white dark:placeholder-gray-500 dark:border-gray-600 dark:focus:ring-gray-900 dark:focus:border-gray-500\" />\n                            </div>\n                            <div class=\"mb-6\">\n                                <button type=\"button\" class=\"w-full px-3 py-4 text-black border-2 border-gray-800 focus:bg-gray-50 rounded-xl focus:outline-none font-bold\">Log in</button>\n                            </div>\n                            <p class=\"text-sm text-center text-gray-400\">Don&#x27;t have an account yet? <a href=\"#!\" class=\"text-green-400 focus:outline-none focus:underline focus:text-green-500 dark:focus:border-green-800\">Sign up</a>.</p>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Login;","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Landing.js",[],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantsSection.js",["72","73","74","75","76","77","78","79","80"],"import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport PlantCard from './PlantCard';\nimport PlantAddModal from './PlantAddModal';\n\nclass PlantsSection extends Component {\n    constructor(){\n        super();\n    \n        this.state = {\n            plants: [],\n            modalOpen: false,\n            editPlantState: null,\n            doUpdate: false,\n            pauseAllEvents: false,\n            timerIndex: {\n                top: {},\n                bottom: {},\n            }\n        }\n      }\n    \n      componentDidMount() {\n        this.fetchPlants();\n      }\n\n      shouldComponentUpdate = (nextProps, nextState) => {\n          if (nextState.timerIndex == this.state.timerIndex){\n            if (nextState.plants != this.state.plants ||\n                nextState.modalOpen != this.state.modalOpen ||\n                nextState.editPlantState != this.state.editPlantState ||\n                nextState.doUpdate != this.state.doUpdate ||\n                nextState.pauseAllEvents != this.state.pauseAllEvents){\n                    return true;\n                }\n\n                return false;\n          }\n\n          return true;\n      }\n\n      SetUpdatePlant = (plant, shouldToggle) => {\n          this.setState({editPlantState: plant, doUpdate: true});\n          \n          if (shouldToggle == null || shouldToggle == true){\n            this.ToggleModal();\n          }\n      }\n\n      TrackTimer = (timer, id, type) => {\n          let curTimerIndex = this.state.timerIndex;\n\n          if (curTimerIndex != {} && curTimerIndex[type] != null && curTimerIndex[type][id] != null){\n              clearTimeout(curTimerIndex[type][id]);\n              curTimerIndex[type][id] = null;\n          } else {\n            curTimerIndex[type][id] = timer;\n          }\n\n          this.setState({timerIndex: curTimerIndex});\n      }\n\n      MakePostRequest = (path, data) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        };\n\n        fetch(path, requestOptions)\n            .then(response => {\n                this.fetchPlants(true);\n                return response.json();\n            })\n            .then(data => {\n                console.log(data);\n            });\n      }\n    \n      fetchPlants = (pause) => {\n        if (pause) this.setState({pauseAllEvents: true});\n\n        if (!pause){\n            fetch('/plants/all')\n            .then(response => response.json())\n            .then(result => {\n                this.setState({plants: result});\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        } else {\n            setTimeout(() => {\n                fetch('/plants/all')\n                .then(response => response.json())\n                .then(result => {\n                    this.setState({plants: result, pauseAllEvents: false});\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n    \n            }, 100);\n        }\n      }\n    \n      plantItems = () => {\n          let rl = [];\n\n          let count = 0;\n    \n          for (let f in this.state.plants){\n              console.log(f);\n              let flow = this.state.plants[f];\n\n              rl.push(<PlantCard trackTimer={this.TrackTimer} eventPause={this.state.pauseAllEvents} data={flow} title={flow.title} waterTime={flow.waterTime} watered={flow.watered} updatePlant={this.SetUpdatePlant} post={this.MakePostRequest} />);\n\n              count++;\n          }\n    \n          return rl;\n      }\n\n    ToggleModal = () => {\n        if (this.state.modalOpen){\n            this.setState({modalOpen: !this.state.modalOpen, editPlantState: null, doUpdate: false});\n        } else {\n            this.setState({modalOpen: !this.state.modalOpen});\n        }\n    }\n\n    render () {\n        return (\n            <div className='mt-12 w-full p-4 border-gray-200 text-left rounded-2xl max-w-3xl mx-auto'>\n                <div className='-mt-3 p-3 flex justify-between border-b-4 mb-6'>\n                    <h3 className='text-4xl font-bold mt-1'>Plants</h3>\n                    <div className='mb-1 px-3 py-2 rounded-xl flex justify-evenly border-2 shadow-sm hover:border-gray-700 cursor-pointer'\n                    onClick={this.ToggleModal}>\n                        <h1 className='pr-2 font-bold'>New</h1>\n                        <FontAwesomeIcon icon={faPlus} size='lg' />\n                    </div>\n                </div>\n                <div id='plants-wrapper' className='row flex flex-wrap gap-4'>\n                    {this.plantItems()}\n                </div>\n                <div id='modal-wrapper' className={(this.state.modalOpen ? '' : 'hidden')}>\n                    <PlantAddModal close={this.ToggleModal} DoRequest={this.MakePostRequest} data={this.state.editPlantState} isUpdate={this.state.doUpdate} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PlantsSection;","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Header.js",["81"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from './Button';\r\n\r\nclass Header extends Component {\r\n  static displayName = Header.name;\r\n\r\n  render () {\r\n    let path  = window.location.pathname\r\n\r\n    let rightColumn = <Button name='Login' \r\n    backgroundColor='bg-white' \r\n    textColor='text-black' \r\n    borderColor='border-blue-500'\r\n    hoverBorderColor='border-blue-600'  />\r\n\r\n    if (path == '/home'){\r\n      rightColumn = <div>USER-1</div>\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"w-full border-b border-gray-200 p-3\">\r\n        <div className='max-w-4xl mx-auto flex justify-between pl-2 pr-2'>\r\n         <Link to=\"/\">\r\n          <div className='text-3xl pt-1 cursor-pointer'>Watermango - <span className='font-bold'>Dashboard</span></div>\r\n         </Link>\r\n\r\n         <Link to=\"/login\">\r\n          {rightColumn}\r\n          </Link>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantAddModal.js",["82","83"],"import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRemoveFormat, faSave, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass PlantAddModal extends React.Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            title: '',\n            timeToWater: 10,\n            isUpdate: false,\n            timeToWait: 30\n        }\n    }\n\n    updateTitle = (e) => {\n        this.setState({title: e.target.value})\n    }\n\n    updateTimeToWater = (e) => {\n        this.setState({timeToWater: e.target.value})\n    }\n\n    updateTimeToWait = (e) => {\n        this.setState({timeToWait: e.target.value})\n    }\n\n\n    CleanUpAndClose = () => {\n        this.setState({title: '', timeToWater: 10, isUpdate: false});\n        this.props.close();\n    }\n\n    submit = () => {\n        if (this.state.title == \"\"){\n            alert(\"Please fill out the title field.\");\n        } else {\n            let data = {\n                'Title': this.state.title,\n                'WaterTime': parseInt(this.state.timeToWater),\n                'Watered': 'Empty',\n                'TimeToWait' : parseInt(this.state.timeToWait)\n            }\n\n            if (this.props.data && this.props.data.id){\n                data['ID'] = this.props.data.id; \n                data.Watered = this.props.data.watered;\n            }\n\n            this.props.DoRequest('/plants/add', data);\n\n            this.setState({title: '', timeToWater: 10, isUpdate: false});\n\n            this.props.close();\n        }\n    }\n\n    deleteMe = () => {\n        let data = {\n            'Title': this.state.title,\n            'WaterTime': parseInt(this.state.timeToWater),\n            'Watered': 'Empty'\n        }\n\n        if (this.props.data && this.props.data.id){\n            data['ID'] = this.props.data.id; \n            data.Watered = this.props.data.watered;\n        }\n\n        this.props.DoRequest('/plants/remove', data);\n\n        this.setState({title: '', timeToWater: 10, isUpdate: false});\n        this.props.close();\n    }\n\n    render () {\n\n        if (this.props.isUpdate && !this.state.isUpdate && this.props.data != null){\n            this.setState({title: this.props.data.title, isUpdate: true, timeToWater: this.props.data.waterTime});\n        }\n\n        return (\n            <div class=\"flex items-center justify-center fixed left-0 bottom-0 w-full h-full bg-gray-200 bg-opacity-50 z-50\">\n                <div class=\"bg-white rounded-xl w-96\">\n                    <div class=\"flex flex-col items-start p-6\">\n                        <div class=\"p-1 flex items-center w-full\">\n                            <div class=\"text-gray-900 font-bold text-2xl\">ADD/EDIT - Plant</div>\n                            <svg onClick={this.CleanUpAndClose} class=\"ml-auto fill-current text-gray-600 hover:text-gray-900 w-6 h-6 cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\">\n                                <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"/>\n                            </svg>\n                        </div>\n                        <hr></hr>\n                        <div className='p-1 w-80 pt-3'>\n                            <div class=\"mb-3 space-y-2 w-full text-sm\">\n                                <label class=\" font-semibold text-gray-800 py-2\">Title</label>\n                                <div class=\"flex flex-wrap items-stretch w-full mb-4 relative\">\n                                    <input type=\"text\" class=\"flex-shrink flex-grow flex-auto leading-normal w-px border h-10 border-grey-light rounded-xl px-3 relative focus:border-gray-100 focus:shadow\" placeholder=\"ex. Plants in the BOARDROOM\" value={this.state.title}onChange={this.updateTitle}></input>\n                                </div>\n                            </div>\n                            <div class=\"mb-3 space-y-2 w-full text-sm\">\n                                <label class=\" font-semibold text-gray-800 py-2\">Time it takes to water plant (in SECONDS)</label>\n                                <div class=\"flex flex-wrap items-stretch w-full mb-4 relative\">\n                                    <input type=\"number\" class=\"flex-shrink flex-grow flex-auto leading-normal w-px border h-10 border-grey-light rounded-xl px-3 relative focus:border-gray-50 focus:shadow\" defaultValue='10' value={this.state.timeToWater}onChange={this.updateTimeToWater}></input>\n                                </div>\n                            </div>\n                            <div class=\"mb-3 space-y-2 w-full text-sm\">\n                                <label class=\" font-semibold text-gray-800 py-2\">Time to wait to water plant (in SECONDS)</label>\n                                <div class=\"flex flex-wrap items-stretch w-full mb-4 relative\">\n                                    <input type=\"number\" class=\"flex-shrink flex-grow flex-auto leading-normal w-px border h-10 border-grey-light rounded-xl px-3 relative focus:border-gray-200 focus:shadow\" defaultValue='10' value={this.state.timeToWait} onChange={this.updateTimeToWait}></input>\n                                </div>\n                            </div>\n                        </div>\n                        <hr></hr>\n                        <div class=\"ml-auto p-1\">\n                            <button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-3 rounded m-1\" onClick={this.deleteMe}>\n                                Delete <span className='pl-2'><FontAwesomeIcon size='lg' icon={faTrashAlt} /></span>\n                            </button>\n                            <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-3 rounded m-1\" onClick={this.submit}>\n                                Save <span className='pl-2'><FontAwesomeIcon size='lg' icon={faSave} /></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PlantAddModal;","/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/PlantCard.js",["84","85","86","87","88","89","90","91"],"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/Button.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":16,"endColumn":4},{"ruleId":"96","severity":1,"message":"97","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":4},{"ruleId":"96","severity":1,"message":"97","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":4},{"ruleId":"96","severity":1,"message":"97","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":4},{"ruleId":"100","severity":1,"message":"101","line":31,"column":36,"nodeType":"102","messageId":"103","endLine":31,"endColumn":38},{"ruleId":"100","severity":1,"message":"104","line":32,"column":34,"nodeType":"102","messageId":"103","endLine":32,"endColumn":36},{"ruleId":"100","severity":1,"message":"104","line":33,"column":37,"nodeType":"102","messageId":"103","endLine":33,"endColumn":39},{"ruleId":"100","severity":1,"message":"104","line":34,"column":42,"nodeType":"102","messageId":"103","endLine":34,"endColumn":44},{"ruleId":"100","severity":1,"message":"104","line":35,"column":36,"nodeType":"102","messageId":"103","endLine":35,"endColumn":38},{"ruleId":"100","severity":1,"message":"104","line":36,"column":42,"nodeType":"102","messageId":"103","endLine":36,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":49,"column":52,"nodeType":"102","messageId":"103","endLine":49,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":57,"column":29,"nodeType":"102","messageId":"103","endLine":57,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":122,"column":15,"nodeType":"107","messageId":"108","endLine":122,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":18,"column":14,"nodeType":"102","messageId":"103","endLine":18,"endColumn":16},{"ruleId":"105","severity":1,"message":"109","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":38,"column":30,"nodeType":"102","messageId":"103","endLine":38,"endColumn":32},{"ruleId":"100","severity":1,"message":"104","line":31,"column":32,"nodeType":"102","messageId":"103","endLine":31,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":32,"column":40,"nodeType":"102","messageId":"103","endLine":32,"endColumn":42},{"ruleId":"100","severity":1,"message":"101","line":55,"column":35,"nodeType":"102","messageId":"103","endLine":55,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":59,"column":32,"nodeType":"102","messageId":"103","endLine":59,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":86,"column":32,"nodeType":"102","messageId":"103","endLine":86,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":101,"column":32,"nodeType":"102","messageId":"103","endLine":101,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":137,"column":43,"nodeType":"102","messageId":"103","endLine":137,"endColumn":45},{"ruleId":"100","severity":1,"message":"101","line":176,"column":32,"nodeType":"102","messageId":"103","endLine":176,"endColumn":34},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'faRemoveFormat' is defined but never used.","no-global-assign","no-unsafe-negation"]