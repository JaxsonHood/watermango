{"ast":null,"code":"var _jsxFileName = \"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/FlowersSection.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTint, faUndoAlt, faSeedling, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FlowerCard from './FlowerCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FlowersSection extends Component {\n  constructor() {\n    super();\n\n    this.fetchFlowers = () => {\n      fetch('/flowers/all').then(response => response.json()).then(result => {\n        this.setState({\n          flowers: result\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.flowerItems = () => {\n      let rl = [];\n      let count = 0;\n\n      for (let f in this.state.flowers) {\n        console.log(f);\n        let flow = this.state.flowers[f];\n\n        if (count == 1 || count == 0) {\n          rl.push( /*#__PURE__*/_jsxDEV(FlowerCard, {\n            title: flow.title,\n            waterTime: flow.waterTime,\n            needsWater: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this));\n        }\n\n        if (count == 2) {\n          rl.push( /*#__PURE__*/_jsxDEV(FlowerCard, {\n            title: flow.title,\n            waterTime: flow.waterTime,\n            needsWater: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this));\n        }\n\n        count++;\n      }\n\n      return rl;\n    };\n\n    this.pushNewFlower = () => {\n      // Simple POST request with a JSON body using fetch\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Title: 'New Flower',\n          WaterTime: 45\n        })\n      };\n      fetch('/flowers/add', requestOptions).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.removeFlower = () => {\n      // Simple POST request with a JSON body using fetch\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ID: 2\n        })\n      };\n      fetch('/flowers/remove', requestOptions).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      flowers: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFlowers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-20 w-full p-6 border-gray-200 text-left rounded-2xl max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-3 p-3 flex justify-between border-b-2 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold\",\n          children: \"Plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 px-3 py-2 rounded-xl flex justify-evenly border-2 shadow-sm hover:border-purple-500 cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"pr-2 font-bold\",\n            children: \"New Plant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            size: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex flex-wrap gap-4\",\n        children: this.flowerItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FlowersSection;","map":{"version":3,"sources":["/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/components/FlowersSection.js"],"names":["React","Component","FontAwesomeIcon","faTint","faUndoAlt","faSeedling","faPlus","FlowerCard","FlowersSection","constructor","fetchFlowers","fetch","then","response","json","result","setState","flowers","catch","e","console","log","flowerItems","rl","count","f","state","flow","push","title","waterTime","pushNewFlower","requestOptions","method","headers","body","JSON","stringify","Title","WaterTime","data","removeFlower","ID","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faUndoAlt, faSeedling, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport FlowerCard from './FlowerCard';\n\nclass FlowersSection extends Component {\n    constructor(){\n        super();\n    \n        this.state = {\n            flowers: []\n        }\n      }\n    \n      componentDidMount() {\n        this.fetchFlowers();\n      }\n    \n      fetchFlowers = () => {\n        fetch('/flowers/all')\n        .then(response => response.json())\n        .then(result => {\n            this.setState({flowers: result})\n        })\n        .catch(e => {\n            console.log(e);\n        });\n      }\n    \n      flowerItems = () => {\n          let rl = [];\n\n          let count = 0;\n    \n          for (let f in this.state.flowers){\n              console.log(f);\n              let flow = this.state.flowers[f];\n              \n              if (count == 1 || count == 0){\n                rl.push(<FlowerCard title={flow.title} waterTime={flow.waterTime} needsWater={true} />);\n              }\n\n              if (count == 2){\n                rl.push(<FlowerCard title={flow.title} waterTime={flow.waterTime} needsWater={false} />);\n              }\n\n              count++;\n          }\n    \n          return rl;\n      }\n    \n      pushNewFlower = () => {\n              // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ Title: 'New Flower', WaterTime: 45})\n        };\n        fetch('/flowers/add', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n            });\n      }\n    \n      removeFlower = () => {\n                    // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ID: 2})\n        };\n        fetch('/flowers/remove', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n            });\n      }\n\n    render () {\n        return (\n            <div className='mt-20 w-full p-6 border-gray-200 text-left rounded-2xl max-w-4xl mx-auto'>\n                <div className='-mt-3 p-3 flex justify-between border-b-2 mb-6'>\n                    <h3 className='text-4xl font-bold'>Plants</h3>\n                    <div className='mb-2 px-3 py-2 rounded-xl flex justify-evenly border-2 shadow-sm hover:border-purple-500 cursor-pointer'>\n                        <h1 className='pr-2 font-bold'>New Plant</h1>\n                        <FontAwesomeIcon icon={faPlus} size='lg' />\n                    </div>\n                </div>\n                <div className='row flex flex-wrap gap-4'>\n                    {this.flowerItems()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FlowersSection;"]},"metadata":{},"sourceType":"module"}