{"ast":null,"code":"var _jsxFileName = \"/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Landing.js\";\nimport React from 'react';\nimport FlowerCard from '../components/FlowerCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchFlowers = () => {\n      fetch('/flowers/all').then(response => response.json()).then(result => {\n        this.setState({\n          flowers: result\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.flowerItems = () => {\n      let rl = [];\n\n      for (let f in this.state.flowers) {\n        console.log(f);\n        let flow = this.state.flowers[f];\n        rl.push( /*#__PURE__*/_jsxDEV(FlowerCard, {\n          title: flow.title,\n          waterTime: flow.waterTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this));\n      }\n\n      return rl;\n    };\n\n    this.pushNewFlower = () => {\n      // Simple POST request with a JSON body using fetch\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Title: 'New Flower',\n          WaterTime: 45\n        })\n      };\n      fetch('/flowers/add', requestOptions).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.removeFlower = () => {\n      // Simple POST request with a JSON body using fetch\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ID: 2\n        })\n      };\n      fetch('/flowers/remove', requestOptions).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      flowers: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFlowers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center m-24 max-w-4xl mx-auto p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 font-bold text-5xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-500 font-mono\",\n          children: \"Watermango\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), \" is a easy way to keep your office \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-500\",\n          children: \"plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 111\n        }, this), \" watered\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-20 w-full p-6 border-2 border-gray-200 text-left rounded-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mt-3 p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-bold\",\n            children: \"Flowers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row flex flex-wrap gap-4\",\n          children: this.flowerItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Volumes/JHOOD_STORAGE/WATER-MANGO/watermango/ClientApp/src/pages/Landing.js"],"names":["React","FlowerCard","Landing","Component","constructor","fetchFlowers","fetch","then","response","json","result","setState","flowers","catch","e","console","log","flowerItems","rl","f","state","flow","push","title","waterTime","pushNewFlower","requestOptions","method","headers","body","JSON","stringify","Title","WaterTime","data","removeFlower","ID","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FlowerCard from '../components/FlowerCard';\n\nclass Landing extends React.Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n        flowers: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchFlowers();\n  }\n\n  fetchFlowers = () => {\n    fetch('/flowers/all')\n    .then(response => response.json())\n    .then(result => {\n        this.setState({flowers: result})\n    })\n    .catch(e => {\n        console.log(e);\n    });\n  }\n\n  flowerItems = () => {\n      let rl = [];\n\n      for (let f in this.state.flowers){\n          console.log(f);\n          let flow = this.state.flowers[f];\n          rl.push(<FlowerCard title={flow.title} waterTime={flow.waterTime} />);\n      }\n\n      return rl;\n  }\n\n  pushNewFlower = () => {\n          // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ Title: 'New Flower', WaterTime: 45})\n    };\n    fetch('/flowers/add', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n        });\n  }\n\n  removeFlower = () => {\n                // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ID: 2})\n    };\n    fetch('/flowers/remove', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n        });\n  }\n  \n  render (){\n    return (\n        <div className=\"text-center m-24 max-w-4xl mx-auto p-3\">\n            <div className=\"p-4 font-bold text-5xl\">\n                <span className='text-blue-500 font-mono'>Watermango</span> is a easy way to keep your office <span className=\"text-green-500\">plants</span> watered</div>\n\n            <div className='mt-20 w-full p-6 border-2 border-gray-200 text-left rounded-2xl'>\n                <div className='-mt-3 p-3'>\n                    <h3 className='text-2xl font-bold'>Flowers</h3>\n                </div>\n                <div className='row flex flex-wrap gap-4'>\n                    {this.flowerItems()}\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Landing;"]},"metadata":{},"sourceType":"module"}